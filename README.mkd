ses.py: Simple and Pythonic Amazon Simple Email Service API client
==================================================================


Author: Riobard Zhan
Email: me@riobard.com
SES API version: 2010-12-01


Usage
-----

Initialization:

    >>> from ses improt SES, SESMail
    >>> ses = SES(key_id='YOUR ACCESS KEY ID', key='YOUR SECRET KEY')


Get sending quota:

    >>> ses.quota
    {'Max24HourSend': 1000, 'SentLast24Hours': 0, 'MaxSendRate': 1}


Get sending statistics:

    >>> ses.stats
    [{'Complaints': 0, 'Timestamp': 1313203500, 'DeliveryAttempts': 3, 'Bounces': 1, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313207100, 'DeliveryAttempts': 9, 'Bounces': 0, 'Rejects': 0}, 
     {'Complaints': 0, 'Timestamp': 1313208000, 'DeliveryAttempts': 6, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313209800, 'DeliveryAttempts': 2, 'Bounces': 0, 'Rejects': 0}, 
     {'Complaints': 0, 'Timestamp': 1313213400, 'DeliveryAttempts': 2, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313221500, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313224200, 'DeliveryAttempts': 3, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313225100, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313226000, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313288100, 'DeliveryAttempts': 6, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313289000, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313289900, 'DeliveryAttempts': 6, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313292600, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0},
     {'Complaints': 0, 'Timestamp': 1313429400, 'DeliveryAttempts': 1, 'Bounces': 0, 'Rejects': 0}]



`timestamp` is seconds since UNIX epoch in GMT/UTC. Every point represents the sending statistics during a 15-minute interval. 


Get verified email addresses:

    >>> ses.verified
    [u'aws-ses@riobard.com', u'noreply@riobard.com']


Verify an email address:

    >>> ses.verify('test@riobard.com')
    {'RequestId': u'0f7297f3-c764-11e0-b6d0-273d09173b49'}

Delete a verified email address:

    >>> ses.delete('test@riobard.com')
    {'RequestId': u'36b0fb55-c764-11e0-ac10-2114a1a1f8e9'}


Send an email:

    >>> mail = SESMail(source    = 'me@riobard.com',
    ...                to        = ['john@riobard.com', 'kate@riobard.com'],
    ...                subject   = 'This is a test message',
    ...                text_body = 'Message body in plain text',
    ...                html_body = 'Message body in HTML')
    >>> ses.send(mail)
    {'MessageId': u'00000131ce811456-6d32754c-8e68-4efc-9026-8c00518d901e-000000',
     'RequestId': u'a5aa67d0-c764-11e0-9f8f-3da8fc215a7e'}


Sending raw emails is not implemented yet.

All actions listed above will block while waiting for response from Amazon SES. 
